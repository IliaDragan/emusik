<?php
/**
 * @file
 * Perform install and uninstall routine.
 */

/**
 * Implements hook_install().
 *
 * Create basic taxonomy vocabulary and related terms.
 */
function emusik_taxonomy_install() {
  $structure = array(
    array(
      'name' => 'Article Type',
      'description' => '',
      'terms' => array(
        'Recommendations',
        'Playlists',
        'News',
        'Feature Article',
      ),
    ),
    array(
      'name' => 'Material Type',
      'description' => '',
      'terms' => array(
        'Event',
        'Concert',
        'CD',
        'Live CD',
        'DVD',
        'Live DVD',
        'N/A',
      ),
    ),
    array(
      'name' => 'Supplier',
      'description' => '',
      'terms' => array(
        'Bibliotek',
        'External Blog',
        'Artist',
      ),
    ),
    // Category exists by default
    /*array(
      'name' => 'Category',
      'description' => '',
      'terms' => array(),
    ),*/
    array(
      'name' => 'Artist/album/track',
      'description' => '',
      'terms' => array(),
    ),
  );

  if (is_array($structure)) {
    foreach ($structure as $entry) {
      $voc = _emusik_taxonomy_create_vocabulary($entry);

      if (is_object($voc)) {
        _emusic_taxonomy_create_terms($voc, $entry['terms']);
      }
      elseif ($voc === SAVED_NEW) {
        $machine_name = _emusic_taxonomy_vocabulary_create_machine_name($entry['name']);
        _emusic_taxonomy_create_terms($machine_name, $entry['terms']);
      }
    }
  }
}

function _emusik_taxonomy_create_vocabulary($entry) {
  if (is_array($entry)) {
    $new_voc = new stdClass();
    $new_voc->name = $entry['name'];
    $new_voc->machine_name = _emusic_taxonomy_vocabulary_create_machine_name($entry['name']);
    $new_voc->description = $entry['description'];

    if (!empty($new_voc->machine_name)) {
      $existing_voc = taxonomy_vocabulary_machine_name_load($new_voc->machine_name);
      if ($existing_voc === FALSE) {
        taxonomy_vocabulary_save($new_voc);
        return SAVED_NEW;
      }
      else {
        return $existing_voc;
      }
    }
  }

  return FALSE;
}


function _emusic_taxonomy_create_terms($voc, $terms) {
  $target_vocabulary = NULL;
  if (is_string($voc) && !empty($voc)) {
    $target_vocabulary = taxonomy_vocabulary_machine_name_load($voc);
  }
  elseif (is_object($voc) && isset($voc->vid)) {
    $target_vocabulary = $voc;
  }

  if (is_array($terms)) {
    foreach ($terms as $term) {
      $existing = taxonomy_get_term_by_name($term);

      if (count($existing) == 0) {
        $new_term = new stdClass();
        $new_term->vid = $target_vocabulary->vid;
        $new_term->name = $term;
        taxonomy_term_save($new_term);
      }
    }
  }
}

function _emusic_taxonomy_vocabulary_create_machine_name($name) {
  if (!empty($name)) {
    return 'emusik_tx_' . preg_replace('/[^a-zA-Z0-9_]/', '_', strtolower($name));
  }

  return '';
}
